schemaVersion: 2.1.0
metadata:
  name: python
  displayName: Python
  description:
    'Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.
    Its high-level built in data structures, combined with dynamic typing and dynamic binding, make it very attractive for Rapid Application Development, as well as for use as a scripting or glue language to connect existing components together.'
  icon: https://raw.githubusercontent.com/devfile-samples/devfile-stack-icons/main/python.svg
  projectType: Python
  provider: Cory Latschkowski
  language: Python
  tags:
    - Python
    - Pip
    - Flask
    - Dash
  version: 2.1.0
starterProjects:
  - name: s2i-dash
    description:
      'Dash is a web framework based on flask, it’s a Python module that lets you develop web applications easily.
      It’s has a small and easy-to-extend core.'
    git:
      remotes:
        origin: https://github.com/codekow/s2i-dash
components:
  - name: tools
    # attributes:
    #   che-code.eclipse.org/contribute-endpoint/default-s2i: 8080
    container:
      image: quay.io/devfile/universal-developer-image:ubi8-latest
      # volumeMounts:
      #   - name: venv
      #     path: /home/user/.venv
      # mountSources: true
      # endpoints:
      #   - attributes:
      #       contributed-by: che-code.eclipse.org
      #       discoverable: false
      #       urlRewriteSupported: false
      #     exposure: public
      #     name: default-s2i
      #     protocol: https
      #     secure: false
      #     targetPort: 8080

  # - name: venv
  #   volume:
  #     size: 1G

  - name: dash-app
    container:
      image: registry.access.redhat.com/ubi9/python-39:latest
      args: ['tail', '-f', '/dev/null']
      memoryLimit: 512Mi
      mountSources: true
      endpoints:
        - name: http-python
          targetPort: 8080
        - exposure: none
          name: debug
          targetPort: 5858
      env:
        - name: DEBUG_PORT
          value: '5858'

commands:
  - id: pip-install-requirements
    exec:
      commandLine: |
        pip install -U pip
        pip install -r requirements.txt
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: build
        isDefault: true
      component: dash-app
  - id: run-app
    exec:
      commandLine: 'python wsgi.py'
      workingDir: ${PROJECT_SOURCE}
      component: dash-app
      group:
        kind: run
        isDefault: true
